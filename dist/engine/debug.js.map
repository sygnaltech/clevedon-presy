{
  "version": 3,
  "sources": ["../../src/engine/debug.ts"],
  "sourcesContent": ["\r\n/*\r\n * Sygnal Debug\r\n * \r\n * Sygnal Technology Group\r\n * http://sygnal.com\r\n * \r\n * Debug Utilities\r\n * \r\n * Stack is;\r\n * r-proxy\r\n * localstorage\r\n * chrome tool\r\n */\r\n\r\nconst DEFAULT_APP_NAME = 'Site'; \r\n\r\nexport class Debug {\r\n\r\n    private _localStorageDebugFlag: string = 'debug-mode';\r\n    private _appName: string = DEFAULT_APP_NAME;\r\n\r\n    private _enabled: boolean = false;\r\n    private _label: string;\r\n\r\n    // Get or set WFU persistent debug state\r\n    // which is stored in localStorage. \r\n    get persistentDebug(): boolean {\r\n        return Boolean(localStorage.getItem(this._localStorageDebugFlag)); \r\n    }\r\n    set persistentDebug(active: boolean) {\r\n        if (active) {\r\n            localStorage.setItem(this._localStorageDebugFlag, \"true\");\r\n            console.debug (`${this._appName} debug enabled (persistent).`);\r\n        } else {\r\n            localStorage.removeItem(this._localStorageDebugFlag); \r\n            console.debug (`${this._appName} debug disabled (persistent).`);\r\n        }\r\n    }\r\n\r\n    // Enable/disable debugging \r\n    get enabled(): boolean {\r\n\r\n        // localStorage is checked for a debug flag, to enable remote debug enabling \r\n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \r\n        var wfuDebugValue = Boolean(localStorage.getItem(this._localStorageDebugFlag)); \r\n\r\n        // Or this with the current debug state\r\n        // If either is enabled, debugging is on \r\n        wfuDebugValue = wfuDebugValue || this._enabled; \r\n\r\n        return wfuDebugValue;\r\n    }\r\n    set enabled(active: boolean) {\r\n        this._enabled = active;\r\n    }\r\n\r\n\r\n    // Initialize\r\n    constructor(label: string, appName: string = DEFAULT_APP_NAME) {\r\n\r\n        // Save the label, for console logging\r\n        this._appName = appName;\r\n        this._label = label;\r\n\r\n    }\r\n\r\n    // Start a console log group\r\n    group(name: string) {\r\n        if (this.enabled)\r\n            console.group(name);\r\n    }\r\n\r\n    // End a console log group\r\n    groupEnd() {\r\n        if (this.enabled)\r\n            console.groupEnd();\r\n    }\r\n\r\n    // Log debug data to the console\r\n    debug(...args: any[]): void {\r\n\r\n        if (this.enabled)\r\n            // Unlimited arguments in a JavaScript function\r\n            // https://stackoverflow.com/a/6396066\r\n            console.debug(this._label, ...args); \r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\n"],
  "mappings": ";;;AAeA,MAAM,mBAAmB;AAElB,MAAM,QAAN,MAAY;AAAA,IA0Cf,YAAY,OAAe,UAAkB,kBAAkB;AAxC/D,WAAQ,yBAAiC;AACzC,WAAQ,WAAmB;AAE3B,WAAQ,WAAoB;AAwCxB,WAAK,WAAW;AAChB,WAAK,SAAS;AAAA,IAElB;AAAA,IAtCA,IAAI,kBAA2B;AAC3B,aAAO,QAAQ,aAAa,QAAQ,KAAK,sBAAsB,CAAC;AAAA,IACpE;AAAA,IACA,IAAI,gBAAgB,QAAiB;AACjC,UAAI,QAAQ;AACR,qBAAa,QAAQ,KAAK,wBAAwB,MAAM;AACxD,gBAAQ,MAAO,GAAG,KAAK,sCAAsC;AAAA,MACjE,OAAO;AACH,qBAAa,WAAW,KAAK,sBAAsB;AACnD,gBAAQ,MAAO,GAAG,KAAK,uCAAuC;AAAA,MAClE;AAAA,IACJ;AAAA,IAGA,IAAI,UAAmB;AAInB,UAAI,gBAAgB,QAAQ,aAAa,QAAQ,KAAK,sBAAsB,CAAC;AAI7E,sBAAgB,iBAAiB,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,QAAiB;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,IAaA,MAAM,MAAc;AAChB,UAAI,KAAK;AACL,gBAAQ,MAAM,IAAI;AAAA,IAC1B;AAAA,IAGA,WAAW;AACP,UAAI,KAAK;AACL,gBAAQ,SAAS;AAAA,IACzB;AAAA,IAGA,SAAS,MAAmB;AAExB,UAAI,KAAK;AAGL,gBAAQ,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,IAE1C;AAAA,EAEJ;",
  "names": []
}

{
  "version": 3,
  "sources": ["../src/page/home.ts", "../src/routeDispatcher.ts", "../src/wfu-cms-select.ts", "../src/site.ts", "../src/index.ts"],
  "sourcesContent": ["\n/*\n * Page | Home\n */\n\nimport gsap from 'gsap'; \n \n\nexport class HomePage {\n\n//  modelDropdown: WebflowDropdown; \n\n  constructor() {\n  }\n  \n  init() {\n\n    console.log(\"Home.\"); \n\n\n\n    // const elements: NodeListOf<Element> = document.querySelectorAll(`.${item.className}`);\n    // console.log(\"Making elements visible\", elements);\n    // gsap.to(elements, { display: 'block' });\n\n\n  }\n\n  \n  \n\n\n\n}\n", "/*\n * Sygnal\n * Route Dispatcher\n * \n */\n\ntype RouteHandler = () => void;\n\nexport interface Routes {\n    [path: string]: RouteHandler;\n}\n\n// Example routes\nconst routes: Routes = {\n    '/': () => {\n        console.log('This is the homepage.');\n    },\n    '/about': () => {\n        console.log('This is the about page.');\n    },\n    '/contact/*': () => {\n        console.log('This is the contact page.');\n    },\n};\n\nexport class RouteDispatcher {\n\n    routes: Routes;\n\n    constructor() {\n//        this.routes = {};\n    }\n\n    matchRoute(path: string): RouteHandler | null {\n        for (const route in this.routes) {\n            if (route.endsWith('*')) {\n                // If the route ends with *, treat it as a wildcard\n                const baseRoute = route.slice(0, -1); // Remove the * from the end\n                if (path.startsWith(baseRoute)) {\n                    return this.routes[route];\n                }\n            } else if (route === path) {\n                // Exact match\n                return this.routes[route];\n            }\n        }\n        return null; // No matching route found\n    }\n    \n    dispatchRoute() {\n        const path = window.location.pathname;\n        const handler = this.matchRoute(path);\n        if (handler) {\n            handler();\n        } else {\n            console.log('No specific function for this path.');\n            // Default function or behavior for unspecified paths\n        }\n    }\n    \n    \n}", "\n\n\nconst CMS_SELECT = \"wfu-cmsselect\"; \n\nconst CMS_SELECT_DATA = \"wfu-cmsselect-data\"; \n\nconst CMS_SELECT_TEXT = \"wfu-cmsselect-text\"; \nconst CMS_SELECT_VALUE = \"wfu-cmsselect-value\"; \n\n\n\nexport class Sa5CmsSelect {\n\n    //  modelDropdown: WebflowDropdown; \n    \n    constructor() {\n    }\n\n    initAll() {\n        // Get all elements with the custom attribute `wfu-cmsselect`\n        const cmsSelectElements = document.querySelectorAll(`[${CMS_SELECT}]`);\n        \n        // Iterate over each `wfu-cmsselect` element\n        cmsSelectElements.forEach(selectElement => {\n            const dataIdentifier = selectElement.getAttribute(CMS_SELECT);\n\n            if (dataIdentifier) {\n                // Find matching data elements with the custom attribute `wfu-cmsselect-data` and the same value\n                const dataElements = document.querySelectorAll(`[${CMS_SELECT_DATA}=\"${dataIdentifier}\"]`);\n\n                dataElements.forEach(dataElement => {\n                    // Find child elements with `wfu-cmsselect-text` and optionally `wfu-cmsselect-value`\n                    const textElements = dataElement.querySelectorAll(`[${CMS_SELECT_TEXT}]`);\n\n                    textElements.forEach(textElement => {\n                        const textValue = textElement.getAttribute(CMS_SELECT_TEXT);\n                        const optionValue = textElement.getAttribute(CMS_SELECT_VALUE);\n\n                        if (textValue) {\n                            // Create an option element\n                            const optionElement = document.createElement('option');\n                            optionElement.textContent = textValue;\n\n                            // Set the option value if it exists\n                            if (optionValue) {\n                                optionElement.value = optionValue;\n                            }\n\n                            // Append the option to the `wfu-cmsselect` element\n                            (selectElement as HTMLSelectElement).appendChild(optionElement);\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n}\n", "\n/*\n * Site\n */\n\nimport gsap from 'gsap'; \nimport { Sa5CmsSelect } from './wfu-cms-select';\n \n\nexport class Site {\n\n//  modelDropdown: WebflowDropdown; \n\n  constructor() {\n  }\n  \n  init() {\n\n    console.log(\"Site.\"); \n\n    const cmsSelect = new Sa5CmsSelect();\n    cmsSelect.initAll(); \n\n    const churchSelect = document.getElementById('church') as HTMLSelectElement;\n  \n    if (churchSelect) {\n      churchSelect.addEventListener('change', () => {\n        const selectedChurch = churchSelect.value;\n\n\n\n      // Find all elements with the custom attribute `site-church-selector`\n      const churchSelectors = document.querySelectorAll('[site-church-selector]') as NodeListOf<HTMLSelectElement>;\n\n      // Update each found select element to match the selected value\n      churchSelectors.forEach(selectElement => {\n        // Find the option with the matching value\n        const matchingOption = Array.from(selectElement.options).find(option => option.value === selectedChurch);\n\n        if (matchingOption) {\n          // Set the select element's value to the matching option's value\n          selectElement.value = matchingOption.value;\n          \n          // const changeEvent = new Event('change', { bubbles: true, cancelable: true });\n          // selectElement.dispatchEvent(changeEvent);\n\n          const inputEvent = new Event('input', { bubbles: true });\n          selectElement.dispatchEvent(inputEvent);\n        }\n      });\n\n\n        console.log(`Selected church: ${selectedChurch}`);\n\n// site-church-selector\n\n\n      });\n    } else {\n      console.error('Select element with ID \"church\" not found.');\n    }\n\n    // const elements: NodeListOf<Element> = document.querySelectorAll(`.${item.className}`);\n    // console.log(\"Making elements visible\", elements);\n    // gsap.to(elements, { display: 'block' });\n\n\n  }\n\n  \n  \n\n\n\n}\n", "/*\n * Index  \n * Main entry point\n * \n */\n\nimport { HomePage } from \"./page/home\";\nimport { RouteDispatcher } from \"./routeDispatcher\";\nimport { Site } from \"./site\";\n\n// Global vars\nconst SITE_NAME = 'Site';\nconst VERSION = 'v0.1.0';\n\n\n\n// Global object\nwindow[SITE_NAME] = window[SITE_NAME] || {}; \nvar SiteData = window[SITE_NAME];\n\ndeclare global {\n    interface Window {\n\n    // Extend the Window interface to include fsAttributes\n    fsAttributes: [string, (filterInstances: any[]) => void][];\n\n    //   modelsDataSourceElems: NodeListOf<HTMLElement>;\n    //   modelsSelectElem: HTMLElement | null;\n    //   modelsNavElem: HTMLElement | null;\n    }\n}\n\n\n\nconst init = () => {\n    \n    console.log(`${SITE_NAME} package init ${VERSION}`);\n\n    (new Site()).init();\n\n    var routeDispatcher = new RouteDispatcher();\n    routeDispatcher.routes = {\n        '/': () => {\n\n            (new HomePage()).init();\n\n        }\n    };\n    routeDispatcher.dispatchRoute(); \n}\n\n/**\n * Initialize\n */ \n\nif (document.readyState !== 'loading') {\n    console.log('document is already ready, just execute code here');\n    init();\n} else {\n    console.log('document was not ready, place code here');\n    document.addEventListener(\"DOMContentLoaded\", init);\n}\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../src/page/home.ts", "../src/engine/page.ts", "../node_modules/js-cookie/dist/js.cookie.mjs", "../src/engine/routeDispatcher.ts", "../src/wfu-cms-select.ts", "../src/site.ts", "../src/routes.ts"],
  "sourcesContent": ["\r\n/*\r\n * Page | Home\r\n */\r\n\r\nimport { IRouteHandler, Page } from \"../engine/index\";\r\n// import { IRouteHandler, Page } from \"@sygnal/sse\";\r\n\r\nexport class HomePage implements IRouteHandler {\r\n\r\n//  modelDropdown: WebflowDropdown; \r\n\r\n  constructor() {\r\n  }\r\n  setup() {\r\n\r\n//    loadEngineCSS(\"site.css\"); \r\n   \r\n  }\r\n\r\n  exec() {  \r\n\r\n//    console.log(\"Home.\"); \r\n\r\n  }\r\n\r\n}\r\n", "\r\n\r\n// Determine Webflow breakpoint?\r\n\r\nexport class Page {\r\n\r\n    // Utility function to get a query parameter value by name\r\n        static getQueryParam(name: string): string | null {\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            return urlParams.get(name);\r\n        }\r\n    \r\n    \r\n        // Add a new async script to the page\r\n        // at the end of the body\r\n        static loadScript(url: string): void {\r\n            const script = document.createElement('script');\r\n            script.src = url;\r\n        //    script.async = true;\r\n            document.body.appendChild(script);\r\n        }\r\n    \r\n        // Add a new CSS file to the page\r\n        static loadCSS(url: string): void {\r\n            const link = document.createElement('link');\r\n            link.rel = 'stylesheet';\r\n            link.href = url;\r\n            document.head.appendChild(link);\r\n        }\r\n    \r\n        // Add a new Engine CSS file to the page\r\n        // Expected to be in the /dist/css/ dir \r\n        static loadEngineCSS(cssFileName: string): void {\r\n            // Get the URL of the currently executing script\r\n            let libPath = window.SSE.baseUrl;\r\n\r\n            // const currentScript = document.currentScript as HTMLScriptElement;\r\n            // if (currentScript) {\r\n                // const scriptURL = new URL(currentScript.src);\r\n                // const origin = scriptURL.origin;\r\n                // const path = scriptURL.pathname.substring(0, scriptURL.pathname.lastIndexOf('/'));\r\n    \r\n                const cssURL = `${libPath}/css/${cssFileName}`;\r\n                this.loadCSS(cssURL);\r\n            // } else {\r\n            //     console.error('Unable to determine the currently executing script.');\r\n            // }\r\n        }\r\n    \r\n        // Add a new Style element to the page\r\n        static loadStyle(css: string): void {\r\n            const style = document.createElement('style');\r\n        //    link.rel = 'stylesheet';\r\n        //    link.href = url;\r\n            style.innerText = css;\r\n            document.head.appendChild(style);\r\n        }\r\n    \r\n        // Replace an existing script source\r\n        static replaceScriptSource(element: HTMLScriptElement, newSrc: string): void {\r\n            element.src = newSrc;\r\n        }\r\n    \r\n        // Replace an existing CSS source\r\n        static replaceCSSLink(element: HTMLLinkElement, newHref: string): void {\r\n            element.href = newHref;\r\n        }\r\n    \r\n        // Function to prepend text to the document title in development mode\r\n        static prependToTitle(text: string): void {\r\n            document.title = `${text}${document.title}`;\r\n        }\r\n    \r\n        // Function to get the current script URL\r\n        static getCurrentScriptUrl(): string | null {\r\n            // Check if document.currentScript is supported\r\n            if (document.currentScript) {\r\n                // Cast to HTMLScriptElement and get the src attribute\r\n                const currentScript = document.currentScript as HTMLScriptElement;\r\n                return currentScript.src;\r\n            }\r\n            // For browsers that do not support document.currentScript\r\n            console.error(\"document.currentScript is not supported in this browser.\");\r\n            return null;\r\n        }\r\n    \r\n        static getCurrentScriptBaseUrl(): string | undefined {\r\n            // Get the URL of the currently executing script\r\n            const currentScript = document.currentScript as HTMLScriptElement;\r\n            if (currentScript) {\r\n                const scriptURL = new URL(currentScript.src);\r\n                const origin = scriptURL.origin;\r\n                const path = scriptURL.pathname.substring(0, scriptURL.pathname.lastIndexOf('/'));\r\n    \r\n                const baseURL = `${origin}${path}`;\r\n                return baseURL; \r\n            } else {\r\n                console.error('Unable to determine the currently executing script.');\r\n            }\r\n\r\n            return undefined; \r\n        }\r\n\r\n    \r\n        static findAncestorWithAttribute(element: HTMLElement, attributeName: string): HTMLElement | null {\r\n            let currentElement: HTMLElement | null = element;\r\n    \r\n            while (currentElement) {\r\n                if (currentElement.hasAttribute(attributeName)) {\r\n                    return currentElement;\r\n                }\r\n                currentElement = currentElement.parentElement;\r\n            }\r\n    \r\n            return null;\r\n        }\r\n    \r\n        static getAncestorAttributeValue(element: HTMLElement, attributeName: string): string | null {\r\n            let currentElement: HTMLElement | null = element;\r\n    \r\n            while (currentElement) {\r\n                if (currentElement.hasAttribute(attributeName)) {\r\n                    return currentElement.getAttribute(attributeName);\r\n                }\r\n                currentElement = currentElement.parentElement;\r\n            }\r\n    \r\n            return null;\r\n        }\r\n    \r\n        static hasAncestorWithAttribute(element: HTMLElement, attributeName: string): boolean {\r\n            return this.findAncestorWithAttribute(element, attributeName) !== null;\r\n        }\r\n    \r\n        static convertToPixels(value: string, contextElement: HTMLElement = document.documentElement): number {\r\n            // Parse the numeric value and unit, including negative values\r\n            const match = value.match(/^(-?\\d+\\.?\\d*)(rem|em|px|vh|vw|%)$/);\r\n            if (!match) throw new Error('Invalid value format');\r\n    \r\n            const [, amountStr, unit] = match;\r\n            const amount = parseFloat(amountStr);\r\n    \r\n            // Convert based on the unit\r\n            switch (unit) {\r\n                case 'px':\r\n                    return amount;\r\n                case 'rem':\r\n                    return amount * parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n                case 'em':\r\n                    // For 'em', it's relative to the font-size of the context element.\r\n                    return amount * parseFloat(getComputedStyle(contextElement).fontSize);\r\n                case 'vh':\r\n                    return amount * window.innerHeight / 100;\r\n                case 'vw':\r\n                    return amount * window.innerWidth / 100;\r\n                case '%':\r\n                    // For %, it's relative to the parent element's size. This can be tricky as it depends on the property (width, height, font-size, etc.).\r\n                    // In this example, we'll use it relative to the width of the context element, but you might need to adjust based on your specific use case.\r\n                    return amount * contextElement.clientWidth / 100;\r\n                default:\r\n                    throw new Error('Unsupported unit');\r\n            }\r\n        }\r\n    \r\n        /*\r\n        // Example usage:\r\n        const pixelValue = convertToPixels(\"10vh\");\r\n        console.log(pixelValue);\r\n        */\r\n    \r\n        static async getResponseHeader(headerName: string, url: string | undefined = undefined): Promise<string | undefined> {\r\n    \r\n            const headers: Headers | undefined = await this.getResponseHeaders(url);\r\n    \r\n            if(!headers)\r\n                return undefined;\r\n    \r\n            if(!headers.has(headerName)) \r\n                return undefined;\r\n    \r\n            return headers.get(headerName) || undefined;\r\n    \r\n        }\r\n    \r\n        // Function to check if the reverse proxy header is present\r\n        static async getResponseHeaders(url: string | undefined = undefined): Promise<Headers | undefined> {\r\n            try {\r\n    \r\n                if(!url) {\r\n                    url = window.location.href\r\n                }\r\n    \r\n                const response = await fetch(url, {\r\n                    method: 'HEAD', // Only fetch headers\r\n                });\r\n    \r\n                return response.headers;\r\n    \r\n            } catch (error) {\r\n                console.error('Error checking reverse proxy header:', error);\r\n            }\r\n    \r\n            return undefined;\r\n        }\r\n    \r\n    }\r\n    \r\n    \r\n    ", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "/*\r\n * Sygnal\r\n * Route Dispatcher\r\n * \r\n */\r\n\r\n//import { Site } from \"../site\";\r\n\r\n\r\n \r\n\r\nexport interface IRouteHandler {\r\n\r\n    setup(): void;\r\n    \r\n    exec(): void; \r\n  \r\n}\r\n\r\n  \r\ntype RouteHandler = () => void;\r\ntype RouteHandlerClass = { new (): IRouteHandler };\r\n\r\n\r\nexport interface Routes {\r\n    [path: string]: RouteHandlerClass;\r\n}\r\n\r\nexport class RouteDispatcher {\r\n\r\n    routes!: Routes;\r\n    _SiteClass: RouteHandlerClass;\r\n\r\n    constructor(SiteClass: RouteHandlerClass) {\r\n        this._SiteClass = SiteClass;\r\n    }\r\n\r\n    matchRoute(path: string): RouteHandlerClass | null {\r\n        for (const route in this.routes) {\r\n            if (route.endsWith('*')) {\r\n                // If the route ends with *, treat it as a wildcard\r\n                const baseRoute = route.slice(0, -1); // Remove the * from the end\r\n                if (path.startsWith(baseRoute)) {\r\n                    return this.routes[route];\r\n                }\r\n            } else if (route === path) {\r\n                // Exact match\r\n                return this.routes[route];\r\n            }\r\n        }\r\n        return null; // No matching route found\r\n    }\r\n    \r\n    setupRoute() {\r\n\r\n        // Pre-init site-level \r\n        const site = new this._SiteClass();\r\n        site.setup(); \r\n//        (new Site().setup());\r\n\r\n        // Pre-init route-level\r\n        const path = window.location.pathname;\r\n        const HandlerClass = this.matchRoute(path);\r\n        if (HandlerClass) {\r\n            const handlerInstance = new HandlerClass();\r\n            handlerInstance.setup(); \r\n        } else {\r\n//            console.log('No specific function for this path.');\r\n        }\r\n    }\r\n\r\n    execRoute() {\r\n\r\n        // Init site-level\r\n        const site = new this._SiteClass();\r\n        site.exec(); \r\n//        (new Site().exec());\r\n\r\n        // Init route-level\r\n        const path = window.location.pathname;\r\n        const HandlerClass = this.matchRoute(path);\r\n        if (HandlerClass) {\r\n            const handlerInstance = new HandlerClass();\r\n            handlerInstance.exec(); \r\n        } else {\r\n//            console.log('No specific function for this path.');\r\n        }\r\n    }\r\n    \r\n}", "\r\n\r\n\r\nconst CMS_SELECT = \"wfu-cmsselect\"; \r\n\r\nconst CMS_SELECT_DATA = \"wfu-cmsselect-data\"; \r\n\r\nconst CMS_SELECT_TEXT = \"wfu-cmsselect-text\"; \r\nconst CMS_SELECT_VALUE = \"wfu-cmsselect-value\"; \r\n\r\n\r\n\r\nexport class Sa5CmsSelect {\r\n\r\n    //  modelDropdown: WebflowDropdown; \r\n    \r\n    constructor() {\r\n    }\r\n\r\n    initAll() {\r\n        // Get all elements with the custom attribute `wfu-cmsselect`\r\n        const cmsSelectElements = document.querySelectorAll(`[${CMS_SELECT}]`);\r\n        \r\n        // Iterate over each `wfu-cmsselect` element\r\n        cmsSelectElements.forEach(selectElement => {\r\n            const dataIdentifier = selectElement.getAttribute(CMS_SELECT);\r\n\r\n            if (dataIdentifier) {\r\n                // Find matching data elements with the custom attribute `wfu-cmsselect-data` and the same value\r\n                const dataElements = document.querySelectorAll(`[${CMS_SELECT_DATA}=\"${dataIdentifier}\"]`);\r\n\r\n                dataElements.forEach(dataElement => {\r\n                    // Find child elements with `wfu-cmsselect-text` and optionally `wfu-cmsselect-value`\r\n                    const textElements = dataElement.querySelectorAll(`[${CMS_SELECT_TEXT}]`);\r\n\r\n                    textElements.forEach(textElement => {\r\n                        const textValue = textElement.getAttribute(CMS_SELECT_TEXT);\r\n                        const optionValue = textElement.getAttribute(CMS_SELECT_VALUE);\r\n\r\n                        if (textValue) {\r\n                            // Create an option element\r\n                            const optionElement = document.createElement('option');\r\n                            optionElement.textContent = textValue;\r\n\r\n                            // Set the option value if it exists\r\n                            if (optionValue) {\r\n                                optionElement.value = optionValue;\r\n                            }\r\n\r\n                            // Append the option to the `wfu-cmsselect` element\r\n                            (selectElement as HTMLSelectElement).appendChild(optionElement);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n", "\r\n/*\r\n * Site\r\n */\r\n\r\n// import gsap from 'gsap'; \r\nimport { Sa5CmsSelect } from './wfu-cms-select';\r\nimport { IRouteHandler, Page } from './engine/index'; // '@sygnal/sse';\r\n \r\n\r\nexport class Site implements IRouteHandler {\r\n\r\n//  modelDropdown: WebflowDropdown; \r\n\r\n  constructor() {\r\n  }\r\n\r\n  setup() {\r\n\r\n    console.log(\"loading site.css\")\r\n    Page.loadEngineCSS(\"site.css\"); \r\n   \r\n  }\r\n\r\n  exec() {\r\n\r\n//    console.log(\"Site.\"); \r\nconsole.log(\"exec site\")\r\n\r\n    const cmsSelect = new Sa5CmsSelect();\r\n    cmsSelect.initAll(); \r\n\r\n    // const churchSelect = document.getElementById('church') as HTMLSelectElement;\r\n  \r\n    // if (churchSelect) {\r\n    //   churchSelect.addEventListener('change', () => {\r\n    //     const selectedChurch = churchSelect.value;\r\n\r\n\r\n\r\n      // Find all elements with the custom attribute `site-church-selector`\r\n      const churchSelectors = document.querySelectorAll('[site-church-selector]') as NodeListOf<HTMLSelectElement>;\r\n\r\n      // Update each found select element to match the selected value\r\n      churchSelectors.forEach(selectElement => {\r\n        // Find the option with the matching value\r\n        // const matchingOption = Array.from(selectElement.options).find(option => option.value === selectedChurch);\r\n\r\n        // if (matchingOption) {\r\n        //   // Set the select element's value to the matching option's value\r\n        //   selectElement.value = matchingOption.value;\r\n          \r\n        //   // const changeEvent = new Event('change', { bubbles: true, cancelable: true });\r\n        //   // selectElement.dispatchEvent(changeEvent);\r\n\r\n        //   const inputEvent = new Event('input', { bubbles: true });\r\n        //   selectElement.dispatchEvent(inputEvent);\r\n        // }\r\n      });\r\n\r\n\r\n//        console.log(`Selected church: ${selectedChurch}`);\r\n\r\n// site-church-selector\r\n\r\n\r\n//      });\r\n    // } else {\r\n    //   console.error('Select element with ID \"church\" not found.');\r\n    // }\r\n\r\n  }\r\n\r\n}\r\n", "/*\r\n * SITE\r\n * Main entry point\r\n * \r\n * https://engine.sygnal.com/\r\n * \r\n * ENGINE MODE\r\n * ?engine.mode=dev\r\n * ?engine.mode=prod\r\n * \r\n */\r\n\r\nimport { HomePage } from \"./page/home\";\r\n// import { RouteDispatcher } from \"@sygnal/sse\";\r\nimport { RouteDispatcher } from \"./engine/index\";\r\nimport { Site } from \"./site\"\r\n\r\nexport const routeDispatcher = (): RouteDispatcher => {\r\n    \r\n    var routeDispatcher = new RouteDispatcher(Site);\r\n    routeDispatcher.routes = {\r\n\r\n        // Site paes\r\n        '/': HomePage,\r\n\r\n        // TEST Pages\r\n\r\n    };\r\n\r\n    return routeDispatcher;\r\n}\r\n\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAQO,MAAM,WAAN,MAAwC;AAAA,IAI7C,cAAc;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,IAIR;AAAA,IAEA,OAAO;AAAA,IAIP;AAAA,EAEF;;;ACtBO,MAAM,OAAN,MAAW;AAAA,IAGV,OAAO,cAAc,MAA6B;AAC9C,YAAM,YAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAC5D,aAAO,UAAU,IAAI,IAAI;AAAA,IAC7B;AAAA,IAKA,OAAO,WAAW,KAAmB;AACjC,YAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,MAAM;AAEb,eAAS,KAAK,YAAY,MAAM;AAAA,IACpC;AAAA,IAGA,OAAO,QAAQ,KAAmB;AAC9B,YAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,WAAK,MAAM;AACX,WAAK,OAAO;AACZ,eAAS,KAAK,YAAY,IAAI;AAAA,IAClC;AAAA,IAIA,OAAO,cAAc,aAA2B;AAE5C,UAAI,UAAU,OAAO,IAAI;AAQrB,YAAM,SAAS,GAAG,eAAe;AACjC,WAAK,QAAQ,MAAM;AAAA,IAI3B;AAAA,IAGA,OAAO,UAAU,KAAmB;AAChC,YAAM,QAAQ,SAAS,cAAc,OAAO;AAG5C,YAAM,YAAY;AAClB,eAAS,KAAK,YAAY,KAAK;AAAA,IACnC;AAAA,IAGA,OAAO,oBAAoB,SAA4B,QAAsB;AACzE,cAAQ,MAAM;AAAA,IAClB;AAAA,IAGA,OAAO,eAAe,SAA0B,SAAuB;AACnE,cAAQ,OAAO;AAAA,IACnB;AAAA,IAGA,OAAO,eAAe,MAAoB;AACtC,eAAS,QAAQ,GAAG,OAAO,SAAS;AAAA,IACxC;AAAA,IAGA,OAAO,sBAAqC;AAExC,UAAI,SAAS,eAAe;AAExB,cAAM,gBAAgB,SAAS;AAC/B,eAAO,cAAc;AAAA,MACzB;AAEA,cAAQ,MAAM,0DAA0D;AACxE,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,0BAA8C;AAEjD,YAAM,gBAAgB,SAAS;AAC/B,UAAI,eAAe;AACf,cAAM,YAAY,IAAI,IAAI,cAAc,GAAG;AAC3C,cAAM,SAAS,UAAU;AACzB,cAAM,OAAO,UAAU,SAAS,UAAU,GAAG,UAAU,SAAS,YAAY,GAAG,CAAC;AAEhF,cAAM,UAAU,GAAG,SAAS;AAC5B,eAAO;AAAA,MACX,OAAO;AACH,gBAAQ,MAAM,qDAAqD;AAAA,MACvE;AAEA,aAAO;AAAA,IACX;AAAA,IAGA,OAAO,0BAA0B,SAAsB,eAA2C;AAC9F,UAAI,iBAAqC;AAEzC,aAAO,gBAAgB;AACnB,YAAI,eAAe,aAAa,aAAa,GAAG;AAC5C,iBAAO;AAAA,QACX;AACA,yBAAiB,eAAe;AAAA,MACpC;AAEA,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,0BAA0B,SAAsB,eAAsC;AACzF,UAAI,iBAAqC;AAEzC,aAAO,gBAAgB;AACnB,YAAI,eAAe,aAAa,aAAa,GAAG;AAC5C,iBAAO,eAAe,aAAa,aAAa;AAAA,QACpD;AACA,yBAAiB,eAAe;AAAA,MACpC;AAEA,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,yBAAyB,SAAsB,eAAgC;AAClF,aAAO,KAAK,0BAA0B,SAAS,aAAa,MAAM;AAAA,IACtE;AAAA,IAEA,OAAO,gBAAgB,OAAe,iBAA8B,SAAS,iBAAyB;AAElG,YAAM,QAAQ,MAAM,MAAM,oCAAoC;AAC9D,UAAI,CAAC;AAAO,cAAM,IAAI,MAAM,sBAAsB;AAElD,YAAM,CAAC,EAAE,WAAW,IAAI,IAAI;AAC5B,YAAM,SAAS,WAAW,SAAS;AAGnC,cAAQ,MAAM;AAAA,QACV,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO,SAAS,WAAW,iBAAiB,SAAS,eAAe,EAAE,QAAQ;AAAA,QAClF,KAAK;AAED,iBAAO,SAAS,WAAW,iBAAiB,cAAc,EAAE,QAAQ;AAAA,QACxE,KAAK;AACD,iBAAO,SAAS,OAAO,cAAc;AAAA,QACzC,KAAK;AACD,iBAAO,SAAS,OAAO,aAAa;AAAA,QACxC,KAAK;AAGD,iBAAO,SAAS,eAAe,cAAc;AAAA,QACjD;AACI,gBAAM,IAAI,MAAM,kBAAkB;AAAA,MAC1C;AAAA,IACJ;AAAA,IAQA,OAAa,kBAAkB,YAAoB,MAA0B,QAAwC;AAAA;AAEjH,cAAM,UAA+B,MAAM,KAAK,mBAAmB,GAAG;AAEtE,YAAG,CAAC;AACA,iBAAO;AAEX,YAAG,CAAC,QAAQ,IAAI,UAAU;AACtB,iBAAO;AAEX,eAAO,QAAQ,IAAI,UAAU,KAAK;AAAA,MAEtC;AAAA;AAAA,IAGA,OAAa,mBAAmB,MAA0B,QAAyC;AAAA;AAC/F,YAAI;AAEA,cAAG,CAAC,KAAK;AACL,kBAAM,OAAO,SAAS;AAAA,UAC1B;AAEA,gBAAM,WAAW,MAAM,MAAM,KAAK;AAAA,YAC9B,QAAQ;AAAA,UACZ,CAAC;AAED,iBAAO,SAAS;AAAA,QAEpB,SAAS,OAAP;AACE,kBAAQ,MAAM,wCAAwC,KAAK;AAAA,QAC/D;AAEA,eAAO;AAAA,MACX;AAAA;AAAA,EAEJ;;;AC3MJ,WAAS,OAAQ,QAAQ;AACvB,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,SAAS,UAAU;AACvB,eAAS,OAAO,QAAQ;AACtB,eAAO,OAAO,OAAO;AAAA,MACvB;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAIA,MAAI,mBAAmB;AAAA,IACrB,MAAM,SAAU,OAAO;AACrB,UAAI,MAAM,OAAO,KAAK;AACpB,gBAAQ,MAAM,MAAM,GAAG,EAAE;AAAA,MAC3B;AACA,aAAO,MAAM,QAAQ,oBAAoB,kBAAkB;AAAA,IAC7D;AAAA,IACA,OAAO,SAAU,OAAO;AACtB,aAAO,mBAAmB,KAAK,EAAE;AAAA,QAC/B;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAKA,WAAS,KAAM,WAAW,mBAAmB;AAC3C,aAAS,IAAK,MAAM,OAAO,YAAY;AACrC,UAAI,OAAO,aAAa,aAAa;AACnC;AAAA,MACF;AAEA,mBAAa,OAAO,CAAC,GAAG,mBAAmB,UAAU;AAErD,UAAI,OAAO,WAAW,YAAY,UAAU;AAC1C,mBAAW,UAAU,IAAI,KAAK,KAAK,IAAI,IAAI,WAAW,UAAU,KAAK;AAAA,MACvE;AACA,UAAI,WAAW,SAAS;AACtB,mBAAW,UAAU,WAAW,QAAQ,YAAY;AAAA,MACtD;AAEA,aAAO,mBAAmB,IAAI,EAC3B,QAAQ,wBAAwB,kBAAkB,EAClD,QAAQ,SAAS,MAAM;AAE1B,UAAI,wBAAwB;AAC5B,eAAS,iBAAiB,YAAY;AACpC,YAAI,CAAC,WAAW,gBAAgB;AAC9B;AAAA,QACF;AAEA,iCAAyB,OAAO;AAEhC,YAAI,WAAW,mBAAmB,MAAM;AACtC;AAAA,QACF;AASA,iCAAyB,MAAM,WAAW,eAAe,MAAM,GAAG,EAAE;AAAA,MACtE;AAEA,aAAQ,SAAS,SACf,OAAO,MAAM,UAAU,MAAM,OAAO,IAAI,IAAI;AAAA,IAChD;AAEA,aAAS,IAAK,MAAM;AAClB,UAAI,OAAO,aAAa,eAAgB,UAAU,UAAU,CAAC,MAAO;AAClE;AAAA,MACF;AAIA,UAAI,UAAU,SAAS,SAAS,SAAS,OAAO,MAAM,IAAI,IAAI,CAAC;AAC/D,UAAI,MAAM,CAAC;AACX,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,QAAQ,QAAQ,GAAG,MAAM,GAAG;AAChC,YAAI,QAAQ,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG;AAEnC,YAAI;AACF,cAAI,QAAQ,mBAAmB,MAAM,EAAE;AACvC,cAAI,SAAS,UAAU,KAAK,OAAO,KAAK;AAExC,cAAI,SAAS,OAAO;AAClB;AAAA,UACF;AAAA,QACF,SAAS,GAAP;AAAA,QAAW;AAAA,MACf;AAEA,aAAO,OAAO,IAAI,QAAQ;AAAA,IAC5B;AAEA,WAAO,OAAO;AAAA,MACZ;AAAA,QACE;AAAA,QACA;AAAA,QACA,QAAQ,SAAU,MAAM,YAAY;AAClC;AAAA,YACE;AAAA,YACA;AAAA,YACA,OAAO,CAAC,GAAG,YAAY;AAAA,cACrB,SAAS;AAAA,YACX,CAAC;AAAA,UACH;AAAA,QACF;AAAA,QACA,gBAAgB,SAAU,YAAY;AACpC,iBAAO,KAAK,KAAK,WAAW,OAAO,CAAC,GAAG,KAAK,YAAY,UAAU,CAAC;AAAA,QACrE;AAAA,QACA,eAAe,SAAUA,YAAW;AAClC,iBAAO,KAAK,OAAO,CAAC,GAAG,KAAK,WAAWA,UAAS,GAAG,KAAK,UAAU;AAAA,QACpE;AAAA,MACF;AAAA,MACA;AAAA,QACE,YAAY,EAAE,OAAO,OAAO,OAAO,iBAAiB,EAAE;AAAA,QACtD,WAAW,EAAE,OAAO,OAAO,OAAO,SAAS,EAAE;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM,KAAK,kBAAkB,EAAE,MAAM,IAAI,CAAC;;;ACtGvC,MAAM,kBAAN,MAAsB;AAAA,IAKzB,YAAY,WAA8B;AACtC,WAAK,aAAa;AAAA,IACtB;AAAA,IAEA,WAAW,MAAwC;AAC/C,iBAAW,SAAS,KAAK,QAAQ;AAC7B,YAAI,MAAM,SAAS,GAAG,GAAG;AAErB,gBAAM,YAAY,MAAM,MAAM,GAAG,EAAE;AACnC,cAAI,KAAK,WAAW,SAAS,GAAG;AAC5B,mBAAO,KAAK,OAAO;AAAA,UACvB;AAAA,QACJ,WAAW,UAAU,MAAM;AAEvB,iBAAO,KAAK,OAAO;AAAA,QACvB;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEA,aAAa;AAGT,YAAM,OAAO,IAAI,KAAK,WAAW;AACjC,WAAK,MAAM;AAIX,YAAM,OAAO,OAAO,SAAS;AAC7B,YAAM,eAAe,KAAK,WAAW,IAAI;AACzC,UAAI,cAAc;AACd,cAAM,kBAAkB,IAAI,aAAa;AACzC,wBAAgB,MAAM;AAAA,MAC1B,OAAO;AAAA,MAEP;AAAA,IACJ;AAAA,IAEA,YAAY;AAGR,YAAM,OAAO,IAAI,KAAK,WAAW;AACjC,WAAK,KAAK;AAIV,YAAM,OAAO,OAAO,SAAS;AAC7B,YAAM,eAAe,KAAK,WAAW,IAAI;AACzC,UAAI,cAAc;AACd,cAAM,kBAAkB,IAAI,aAAa;AACzC,wBAAgB,KAAK;AAAA,MACzB,OAAO;AAAA,MAEP;AAAA,IACJ;AAAA,EAEJ;;;ACtFA,MAAM,aAAa;AAEnB,MAAM,kBAAkB;AAExB,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AAIlB,MAAM,eAAN,MAAmB;AAAA,IAItB,cAAc;AAAA,IACd;AAAA,IAEA,UAAU;AAEN,YAAM,oBAAoB,SAAS,iBAAiB,IAAI,aAAa;AAGrE,wBAAkB,QAAQ,mBAAiB;AACvC,cAAM,iBAAiB,cAAc,aAAa,UAAU;AAE5D,YAAI,gBAAgB;AAEhB,gBAAM,eAAe,SAAS,iBAAiB,IAAI,oBAAoB,kBAAkB;AAEzF,uBAAa,QAAQ,iBAAe;AAEhC,kBAAM,eAAe,YAAY,iBAAiB,IAAI,kBAAkB;AAExE,yBAAa,QAAQ,iBAAe;AAChC,oBAAM,YAAY,YAAY,aAAa,eAAe;AAC1D,oBAAM,cAAc,YAAY,aAAa,gBAAgB;AAE7D,kBAAI,WAAW;AAEX,sBAAM,gBAAgB,SAAS,cAAc,QAAQ;AACrD,8BAAc,cAAc;AAG5B,oBAAI,aAAa;AACb,gCAAc,QAAQ;AAAA,gBAC1B;AAGA,gBAAC,cAAoC,YAAY,aAAa;AAAA,cAClE;AAAA,YACJ,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EAEJ;;;AChDO,MAAM,OAAN,MAAoC;AAAA,IAIzC,cAAc;AAAA,IACd;AAAA,IAEA,QAAQ;AAEN,cAAQ,IAAI,kBAAkB;AAC9B,WAAK,cAAc,UAAU;AAAA,IAE/B;AAAA,IAEA,OAAO;AAGT,cAAQ,IAAI,WAAW;AAEnB,YAAM,YAAY,IAAI,aAAa;AACnC,gBAAU,QAAQ;AAWhB,YAAM,kBAAkB,SAAS,iBAAiB,wBAAwB;AAG1E,sBAAgB,QAAQ,mBAAiB;AAAA,MAczC,CAAC;AAAA,IAaL;AAAA,EAEF;;;ACxDO,MAAM,kBAAkB,MAAuB;AAElD,QAAIC,mBAAkB,IAAI,gBAAgB,IAAI;AAC9C,IAAAA,iBAAgB,SAAS;AAAA,MAGrB,KAAK;AAAA,IAIT;AAEA,WAAOA;AAAA,EACX;",
  "names": ["converter", "routeDispatcher"]
}
